#!/bin/dash
. girt-helper

# check current location
if ! test -e "$PWD/.girt"; then
    echo "$0: error: girt repository directory .girt not found" >&2
    exit 1
fi

for file in *; do
    if test -e "$file"; then
        echo "$file" >> "$PWD/.girt/tmp/allfiles.tmp"
    fi
done

cut -f2 < "$INDEX_FILE" >> "$PWD/.girt/tmp/allfiles.tmp"
cut -f2 < "$INDEX_FILE" >> "$PWD/.girt/tmp/allfiles.tmp"

commit_number=$(tail -n1 "$COMMITS_FILE" | cut -f1)
if test -n "$commit_number"; then
    cut -f2 < "$COMMIT_DIR/$commit_number" >> "$PWD/.girt/tmp/allfiles.tmp"
fi

files=$(sort "$PWD/.girt/tmp/allfiles.tmp" | uniq)
rm "$PWD/.girt/tmp/allfiles.tmp"

for file in $files; do
    LINE=$(grep -P "\s*\Q$file\E$" "$INDEX_FILE") # index file
    REPO_LATEST_LINE=$(grep -P "\s*\Q$file\E$" "$COMMIT_DIR/$commit_number") # latest commit file

    if ! test -e "$PWD/$file" && test -n "$LINE" && test -n "$REPO_LATEST_LINE"; then
        echo "$file - file deleted"
        continue
    fi

    if ! test -e "$PWD/$file" && test -z "$LINE"; then
        echo "$file - deleted"
        continue
    fi
    if test -z "$LINE";then
        echo "$file - untracked"
        continue
    fi

    if test -e "$PWD/$file" ; then
        currentHash=$(gzip -c -n "$PWD/$file"|sha1sum|cut -d' ' -f1)
    fi

    hashed=$(echo "$LINE"|cut -f1)
    repo_latest_hashed=$(echo "$REPO_LATEST_LINE" | cut -f1)

    if test -z "$REPO_LATEST_LINE"; then
        # only in index
        if ! test -e "$PWD/$file"; then
            echo "$file - added to index, file deleted"
            continue
        fi
        if test "$currentHash" != "$hashed" ; then
            echo "$file - added to index, file changed"
            continue
        fi
        echo "$file - added to index"
        continue
    fi

    if test "$currentHash" != "$hashed" && test -n "$repo_latest_hashed" && test "$hashed" != "$repo_latest_hashed" ;then
        # file added and changed 
        echo "$file - file changed, different changes staged for commit" 1>&2
        continue
    fi

    if test "$currentHash" = "$hashed" && test "$currentHash" != "$repo_latest_hashed"; then
        # file added but does not commit
        echo "$file - file changed, changes staged for commit" 1>&2
        continue
    fi
    if test "$currentHash" != "$hashed" ; then
        # file changed
        echo "$file - file changed, changes not staged for commit" 1>&2
        continue
    fi

    echo "$file - same as repo"

done